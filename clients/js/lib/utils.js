    // merge two objects (not a deep copy)    function merge(destination, source) {        for (var key in source) {            if (source.hasOwnProperty(key)) {                destination[key] = source[key];            }        }        return destination;    }    // empty function    function noop() {}    // simple string hash function    function foldString(str) {        var FOLD = 4;        var MODULE = 0xffffffff;        var strlen = str.length;        var sum = 0;        // добиваем строку нулями до длины кратной FOLD        if (strlen % FOLD) {            str += '000'.substr(0, FOLD - strlen % FOLD);        }        //        for(var i = 0, len = strlen / FOLD; i < len; ++i) {            for(var j = 0; j < FOLD; ++j) {                sum += str.charCodeAt(i * FOLD + j) << (j * 8);            }        }        return sum % MODULE;    }    // set cookie    function setCookie( name, value, expires, path, domain, secure ) {        var today = new Date();        today.setTime( today.getTime() );        var expires_date = new Date(expires);        document.cookie = name + "=" + encodeURIComponent( value ) +        ( ( expires ) ? ";expires=" + expires_date.toGMTString() : "" ) +        ( ( path ) ? ";path=" + path : "" ) +        ( ( domain ) ? ";domain=" + domain : "" ) +        ( ( secure ) ? ";secure" : "" );    }    // get cookie    function getCookie( check_name ) {        var a_all_cookies = document.cookie.split( ';' );        var a_temp_cookie = '';        var cookie_name = '';        var cookie_value = '';        var b_cookie_found = false;        for (var i = 0; i < a_all_cookies.length; i++ ) {            a_temp_cookie = a_all_cookies[i].split( '=' );            cookie_name = a_temp_cookie[0].replace(/^\s+|\s+$/g, '');            if ( cookie_name == check_name )            {                b_cookie_found = true;                if ( a_temp_cookie.length > 1 )                {                    cookie_value = decodeURIComponent( a_temp_cookie[1].replace(/^\s+|\s+$/g, '') );                }                return cookie_value;            }            a_temp_cookie = null;            cookie_name = '';        }        if ( !b_cookie_found ) {            return null;        }    }