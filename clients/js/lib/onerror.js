    var ErrorHandler = function(fn, context) {        this.__handler = this.__createErrorHandler(fn, context);        if (this.__IS_SAFARI) {            this.__useErrorToString();        } else {            this.__useWindowOnError();        }    };    ErrorHandler.prototype.__IS_SAFARI = navigator.userAgent.indexOf('Safari') !== -1;    ErrorHandler.prototype.__useWindowOnError = function() {        this.__previousErrorHandler = window.onerror;        window.onerror = this.__handler;    };    ErrorHandler.prototype.__useErrorToString = function() {        var self = this;        Error.prototype.toString = function() {            self.__handler(this.message, this.sourceURL, this.line);            return this.message;        };    };    ErrorHandler.prototype.__createErrorHandler = function(fn, context) {        if (typeof fn !== 'function') {            return;        }        var self = this;        context = context || window;        return function(message, file, line) {            if (self.__previousErrorHandler) {                self.__previousErrorHandler.apply(context, arguments);            }            return fn.apply(context, arguments);        }    };